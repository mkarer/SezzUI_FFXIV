<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;
using Dalamud.Logging;

namespace SezzUI.Logging
{
	public class PluginLogger
	{
		private string _prefix = "";
		
		public PluginLogger(string prefix = "")
		{
			SetPrefix(prefix);
		}

		public void SetPrefix(string prefix)
		{
			_prefix = prefix;
		}
		
<#
    foreach (string logLevel in new[] {"Verbose", "Debug", "Information", "Warning", "Error", "Fatal"})
    {
#>
#if DEBUG
		public void <#= logLevel #>(object message, [CallerFilePath] string callerPath = "", [CallerMemberName] string callerName = "", [CallerLineNumber] int lineNumber = -1)
		{
			foreach (string m in SplitMessage(message))
			{
				PluginLog.<#= logLevel #>(new StringBuilder("[").Append(_prefix).Append(_prefix != "" ? "::" : "").Append(callerName).Append(':').Append(lineNumber).Append("] ").Append(m).ToString());
			}
			
		}
#else
		public void <#= logLevel #>(object message)
		{
			foreach (string m in SplitMessage(message))
			{
				PluginLog.<#= logLevel #>(new StringBuilder().Append(_prefix != "" ? $"[{_prefix}] " : "").Append(m).ToString());
			}
		}
#endif

<#
    }
#>
        private static IEnumerable<string> SplitMessage(object message) {
            if (message is IList list) {
                return list.Cast<object>().Select((t, i) => $"{i}: {t}");
            }
            return $"{message}".Split('\n');
        }
	}
}